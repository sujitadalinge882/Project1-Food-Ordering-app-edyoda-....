{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c81d41ee",
   "metadata": {},
   "outputs": [],
   "source": [
    " import json\n",
    "class Restaurant:\n",
    "    \n",
    "    def __init__(self):\n",
    "        self.foods={}     \n",
    "        self.food_id=len(self.foods) + 1   \n",
    "        self.personal_detail={}\n",
    "        self.customer_id=len(self.personal_detail) + 1\n",
    "        \n",
    "       \n",
    "        \n",
    "        \n",
    "        \n",
    "    def food_items(self): \n",
    "        self.name = input(\"enter the food name for order : \")\n",
    "        self.quantity = int(input(\"enter the quantity of food for order : \"))\n",
    "        self.price = int(input(\"enter the price of foof item : \"))\n",
    "        self.discount = int(input(\"enter the discount to be given on food items : \"))\n",
    "        self.stock = int(input(\"enter the stock available : \"))\n",
    "        self.items={\"name\":self.name , \"quantity\": self.quantity , \"price\":self.price , \"discount\":self.discount , \"stock\":self.stock}\n",
    "        self.food_id=len(self.foods) + 1  #\n",
    "        self.foods[self.food_id]=self.items\n",
    "        print()\n",
    "        print(self.foods)\n",
    "        print()\n",
    "        with open(\"Food_items.json\",\"w\") as f:\n",
    "            json.dump(self.foods,f)\n",
    "        print(\"Items added successfully!!!!!!!!!\")\n",
    "        \n",
    "        \n",
    "    def remove_food_items(self):    \n",
    "        \n",
    "        del self.foods[int(input(\"enter the food_id which you want to delete? : \"))]\n",
    "        print()\n",
    "        print(\"Remaining items are : \",self.foods)\n",
    "        print()\n",
    "        with open(\"Food_items.json\",\"w\") as f:\n",
    "            json.dump(self.foods,f)\n",
    "        print()\n",
    "        print(\"Remaining items are : \",self.foods)\n",
    "        \n",
    "    def edit_food_items(self):\n",
    "        \n",
    "        food_ids= int(input(\"Enter the food_ids which yoi want to update :\"))\n",
    "        for i in self.foods[food_ids]:\n",
    "            self.foods[food_ids][i] = input(f\"Enter the {i} data you want to update : \")\n",
    "        print(self.foods)\n",
    "        print()\n",
    "        print(\"Foods items updated succesfully !!!!\")\n",
    "        with open(\"Food_items.json\",\"w\") as f:\n",
    "            json.dump(self.foods,f)\n",
    "        print()\n",
    "        print(\"Remaining items are : \",self.foods)\n",
    "        \n",
    "        \n",
    "    def view_list_items(self):\n",
    "        \n",
    "        print(\"list of food items\")\n",
    "        for i in self.foods: #iterating inside dict\n",
    "            print(\"food_id : \",i, \"\\n*********************************\")\n",
    "            for j in self.foods[i]:\n",
    "                print(j,\":\", self.foods[i][j])\n",
    "                \n",
    "                \n",
    "                \n",
    "# User functionality\n",
    "\n",
    "    def Register(self):\n",
    "        self.full_name = input(\"Enter the fullname of customer : \")\n",
    "        self.phone_no = int(input(\"enter the customer phone no : \"))\n",
    "        self.email    =  input(\"Enter the customer email : \")\n",
    "        self.address = input(\"enter the customer address : \")\n",
    "        self.password = input(\"enter the customer password : \")\n",
    "        self.items1 = {\"full_name\" : self.full_name , \"phone_no\" : self.phone_no , \"email\" : self.email , \"address\" : self.address , \"password\" : self.password}\n",
    "        self.customer_id=len(self.personal_detail) + 1\n",
    "        self.personal_detail[self.customer_id]=self.items1\n",
    "        print()\n",
    "        print(\"The personal details is filled by the customer \",self.personal_detail)\n",
    "        print(\"________________________________________________________________________\")\n",
    "        with open(\"Customer_info.json\",\"w\") as f:\n",
    "            json.dump(self.personal_detail,f)\n",
    "        print()\n",
    "        print(\"Items added successfully!!!!!!!!!\")\n",
    "        print(\"***************************************************\")\n",
    "        \n",
    "        \n",
    "    def login(self):\n",
    "        while (True):\n",
    "            username = input(\"Please enter your username: \")\n",
    "            if (username == self.email):\n",
    "                password = input(\"Please enter your password: \")\n",
    "                if (password == self.password):\n",
    "                    print(\"Logged in successfully as \")\n",
    "                    break\n",
    "                else:\n",
    "                    print(\"Password incorrect!\")\n",
    "            else:\n",
    "                 print(\"Username incorrect!\" )   \n",
    "                \n",
    "                \n",
    "        \n",
    "    def place_order(self):\n",
    "        self.order=[]\n",
    "        print()\n",
    "        print(\"******************************************\")\n",
    "        while True:  \n",
    "            print(\"1. Tandoori Chicken (4 pieces) [INR 240]\")  \n",
    "            print(\"2. Vegan Burger (1 Piece) [INR 320]\")  \n",
    "            print(\"3. Truffle Cake (500gm) [INR 900]\")\n",
    "            \n",
    "            user1 = int(input(\"Select the food to give order :\")) \n",
    "            print()\n",
    "            print(\"--------------------------------------------\")\n",
    "            if user1 == 1:  \n",
    "                self.order.append(\"Tandoori Chicken (4 pieces) [INR 240]\")\n",
    "                print(self.order)\n",
    "                \n",
    "            elif user1 == 2:\n",
    "                self.order.append(\"Vegan Burger (1 Piece) [INR 320]\")\n",
    "                print(self.order)\n",
    "                \n",
    "            elif user1 == 3:\n",
    "                self.order.append(\"Truffle Cake (500gm) [INR 900]\")\n",
    "                print(self.order)\n",
    "                print(\"Plz type  4 to exit\")\n",
    "                print()\n",
    "                \n",
    "            elif user1 == 4:\n",
    "                break \n",
    "            else:\n",
    "                print(\"Oops!!!!!!!!! Please select correct menu option.\") \n",
    "                \n",
    "                \n",
    "    def order_history(self):\n",
    "        print(\"list of order history\")\n",
    "        print(\"--------------------------------------------\")\n",
    "        for i in self.order_history:\n",
    "            print(\"Orderes_history of the customer is : \",i)\n",
    "        print()\n",
    "        print(\"*******************************************\")\n",
    "        self.customer_id=len(self.personal_detail) + 1  \n",
    "        self.personal_detail[self.customer_id]=self_order\n",
    "        print()\n",
    "        print(self.personal_detail)\n",
    "        print()\n",
    "        print(\"*****************************************************\")\n",
    "                \n",
    "    \n",
    "        \n",
    "    def update_profile(self):\n",
    "        customer_id= int(input(\"Enter the menu_id which you want to update :\"))\n",
    "        for i in self.personal_detail[self.customer_id]:\n",
    "            self.personal_detail[self.customer_id][i] = input(f\"Enter the {i} data you want to update : \")\n",
    "        print(self.personal_detail)\n",
    "        print()\n",
    "        print(\"User profile/menu's updated succesfully !!!!\")\n",
    "        print(\"****************************************************************\")\n",
    "        \n",
    "        with open(\"Customer_info.json\",\"w\") as f:\n",
    "            json.dump(self.personal_detail,f)\n",
    "        print(\"Items added successfully!!!!!!!!!\")\n",
    "    \n",
    "        \n",
    "        \n",
    "        \n",
    "obj=Restaurant()\n",
    "print(\"Welcome to My Dear Reasuatant\")\n",
    "print(\"********************************\")\n",
    "while True:  \n",
    "    print(\"Please select 1 or 2 or 3 to move forward\")\n",
    "    print(\"*****************************************\")\n",
    "    print(\"1. Admin\")  \n",
    "    print(\"2. User\")  \n",
    "    print(\"3. Exit\")  \n",
    "    print(\"--------------------------------------------------------\")\n",
    "    print()\n",
    "    user1 = int(input(\"Enter the Choice:\"))  \n",
    "    if user1 == 1:  \n",
    "        print(\"\\n**************Admin Service Chart***********\")  \n",
    "        print(\"1. food_items()\")  \n",
    "        print(\"2. remove_food_items()\")  \n",
    "        print(\"3. edit_food_items()\")  \n",
    "        print(\"4. view_list_items()\") \n",
    "        print(\"5. Exit\")\n",
    "        print()\n",
    "        print(\"**********************************************\")\n",
    "        user_input = int(input(\"Enter the Choice:\"))  \n",
    "  \n",
    "        if user_input == 1:  \n",
    "            obj.food_items()  \n",
    "              \n",
    "        elif user_input == 2: \n",
    "            obj.remove_food_items()\n",
    "            \n",
    "        elif user_input == 3:\n",
    "            obj.edit_food_items()\n",
    "            \n",
    "        elif user_input == 4:\n",
    "            obj.view_list_items()\n",
    "            \n",
    "        elif user_input == 5:  \n",
    "            break  \n",
    "              \n",
    "        else:  \n",
    "            print(\"Oops! Incorrect User input.\")  \n",
    "            \n",
    "    elif user1 == 2:\n",
    "        print(\"\\n*********Customer service chart**********\")\n",
    "        print(\"1. Register()\")\n",
    "        print(\"2. login()\")\n",
    "        print(\"3. place_order()\")\n",
    "        print(\"4. order_history()\")\n",
    "        print(\"5. update_profile()\")\n",
    "        print()\n",
    "        print(\"*****************************************************\")\n",
    "        user_input = int(input(\"Enter the Choice:\"))  \n",
    "  \n",
    "        if user_input == 1:  \n",
    "            obj.Register()  \n",
    "              \n",
    "        elif user_input == 2: \n",
    "            obj.login()\n",
    "            \n",
    "        elif user_input == 3:\n",
    "            obj.place_order()\n",
    "            \n",
    "            \n",
    "        elif user_input==4:\n",
    "            obj.order_history\n",
    "            \n",
    "        \n",
    "            \n",
    "        elif user_input == 5:\n",
    "            obj.update_profile()\n",
    "            \n",
    "        elif user_input == 6:  \n",
    "            break  \n",
    "              \n",
    "        else:  \n",
    "            print(\"Oops! Incorrect User input.\")  \n",
    "         \n",
    "    \n",
    "    elif user1 == 3:  \n",
    "        break  \n",
    "      \n",
    "    else:  \n",
    "        print(\"Oops! Incorrect user.\")  \n",
    "        \n",
    "        \n",
    "            \n",
    "\n",
    "        \n",
    "        "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
